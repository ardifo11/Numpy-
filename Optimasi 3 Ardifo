{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "9fd5e457-d4de-4a4b-a889-c083cb2af618",
   "metadata": {},
   "source": [
    "Ardifo Sya'a\n",
    "\n",
    "20194920001 \n",
    "\n",
    "Statistika\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "97ba55e5-f603-4d31-8e0f-c382274841ad",
   "metadata": {},
   "outputs": [],
   "source": [
    "Jawaban Tugas 2 Optimasi"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "81e3538e-8f61-4105-8bdf-00a22acc6664",
   "metadata": {},
   "source": [
    "Jawaban 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bc0eed9d-34d4-49b9-8d2b-5954be67ff2d",
   "metadata": {},
   "outputs": [],
   "source": [
    "Untuk tugas nomor satu,Saya masih belajar pak untuk menulis math di python"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2f2eefbe-22b8-4b75-ac29-df37e8783c11",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "e2d45397-7257-4449-83ed-ba43226d722a",
   "metadata": {},
   "source": [
    "Jawaban 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "edfcca45-76ad-4a79-82eb-c4cc58eb5d27",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pulp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "e4a3207f-c1b7-4b5e-9fff-1d65b078ac56",
   "metadata": {},
   "outputs": [],
   "source": [
    "model = pulp.LpProblem(\"_\", pulp.LpMaximize)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "58403e9a-c9a9-44bf-9e31-df712bb1c101",
   "metadata": {},
   "outputs": [],
   "source": [
    "A = pulp.LpVariable('A', lowBound=0, cat='Integer')\n",
    "B = pulp.LpVariable('B', lowBound=0, cat='Integer')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "3959b905-779f-40bc-b96c-57d294dc3004",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Objective function\n",
    "model += 30000 * A + 45000 * B, \"Profit\"\n",
    "\n",
    "# Constraints\n",
    "model += 3 * A + 4 * B <= 30\n",
    "model += 5 * A + 6 * B <= 60\n",
    "model += 1.5 * A + 3 * B <= 21"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "66997056-f5f8-4fbc-8bc2-e1e732b60ee7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Optimal'"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Solve our problem\n",
    "model.solve()\n",
    "pulp.LpStatus[model.status]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f2dddfb1-517a-4598-8ea0-ba219051c9d6",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Print our decision variable values\n",
    "print \"Production of Car A = {}\".format(A.varValue)\n",
    "print \"Production of Car B = {}\".format(B.varValue)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d5fa1275-bb56-40ce-9e20-cc5da338c07b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Print our objective function value\n",
    "print pulp.value(model.objective)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9ce8fc92-0b7f-4f5f-9096-06d4a41066f4",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "82f160a4-def7-48df-905d-42345d78d257",
   "metadata": {},
   "source": [
    "Jawaban 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "599366dd-8355-470b-b47d-1d62e2bb0a11",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "from scipy.optimize import linprog"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "dcad8c49-c7cd-49c4-b3e2-955228910a3b",
   "metadata": {},
   "outputs": [],
   "source": [
    "obj= [-1, -2]\n",
    "\n",
    "lhs_ineq = [[ 3, 4],\n",
    "            [ 5, 6],\n",
    "            [ 1.5, 3]]\n",
    "\n",
    "rhs_ineq = [30,\n",
    "            60,\n",
    "            21]\n",
    "\n",
    "lhs_eq = [[-1, 5]]\n",
    "\n",
    "rhs_eq = [15]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d7d99e7b-8d76-4729-9d98-95aec0d43aaa",
   "metadata": {},
   "outputs": [],
   "source": [
    "bnd = [(0, float(\"inf\")), \n",
    "       (0, float(\"inf\"))]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "a1b970f6-75d3-47ba-913c-ee8309a63c69",
   "metadata": {},
   "outputs": [],
   "source": [
    "model2 = linprog(c=obj,\n",
    "                  A_ub=lhs_ineq,\n",
    "                  b_ub=rhs_ineq,\n",
    "                  bounds=bnd,\n",
    "                  method=\"highs\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "23691e79-3714-469a-ae39-f1bf89d1317d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "           con: array([], dtype=float64)\n",
      " crossover_nit: 0\n",
      "         eqlin:  marginals: array([], dtype=float64)\n",
      "  residual: array([], dtype=float64)\n",
      "           fun: -14.0\n",
      "       ineqlin:  marginals: array([-0.        , -0.        , -0.66666667])\n",
      "  residual: array([ 0., 14.,  0.])\n",
      "         lower:  marginals: array([0., 0.])\n",
      "  residual: array([2., 6.])\n",
      "       message: 'Optimization terminated successfully. (HiGHS Status 7: Optimal)'\n",
      "           nit: 3\n",
      "         slack: array([ 0., 14.,  0.])\n",
      "        status: 0\n",
      "       success: True\n",
      "         upper:  marginals: array([0., 0.])\n",
      "  residual: array([inf, inf])\n",
      "             x: array([2., 6.])\n"
     ]
    }
   ],
   "source": [
    "print(model2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "fe211067-6cb7-4ac3-a3f8-8f35fff830df",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model2.success"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "ac8934cc-dd2f-4f0c-97f8-a5b201a8e870",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-14.0"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model2.fun"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "06269fbd-8c69-4cde-aa9b-b867c3824ba0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2., 6.])"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model2.x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "93a65486-0ed4-42cd-9cdb-1edd7b2f704c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
